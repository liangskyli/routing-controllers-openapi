openapi: 3.1.0
info:
  title: custom title
  license:
    name: >-
      This file is auto generated by @liangskyli/routing-controllers-openapi, do
      not edit!
  version: 0.4.1
tags:
  - name: Test1
    description: ''
paths:
  /root/v1/getQueryParams1:
    get:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: &ref_0
                $ref: '#/components/schemas/commonResponse'
      parameters:
        - name: activityBases
          in: query
          required: true
          schema:
            type: array
            items: &ref_1
              $ref: '#/components/schemas/ActivityBase'
          description: activityBases
  /root/v1/getQueryParams2:
    get:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      parameters:
        - name: inlineQueryParam1
          in: query
          required: true
          schema:
            type: string
        - name: inlineQueryParam2
          in: query
          required: true
          schema:
            anyOf:
              - type: string
              - type: number
        - name: inlineQueryParam3
          in: query
          required: true
          schema:
            type: integer
        - name: inlineQueryParam4
          in: query
          required: true
          schema:
            type: 'null'
        - name: inlineQueryParam5
          in: query
          required: true
          schema:
            items:
              - type: string
              - type: boolean
            type: array
            maxItems: 2
            minItems: 2
        - name: inlineQueryParam6
          in: query
          required: true
          schema:
            type: array
            items:
              items:
                - type: string
                - type: boolean
              type: array
              maxItems: 2
              minItems: 2
        - name: inlineQueryParam7
          in: query
          required: true
          schema:
            type: array
            items:
              items:
                - items:
                    - type: string
                    - type: boolean
                  type: array
                  maxItems: 2
                  minItems: 2
                - type: number
              type: array
              maxItems: 2
              minItems: 2
  /root/v1/getQueryParam:
    get:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      summary: getQueryParam
      parameters:
        - name: queryParam1
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam1'
        - name: queryParam2
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam2'
        - name: queryParam3
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam3'
        - name: queryParam4
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam4'
        - name: queryParam5
          in: query
          required: true
          schema:
            type: number
  /root/v1/getQueryParamWithQueryParams:
    get:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: &ref_2
                $ref: '#/components/schemas/Response1'
      parameters:
        - name: param1
          in: header
          required: true
          schema:
            type: string
          description: 单行注释
        - name: param2
          in: header
          required: true
          schema:
            type: 'null'
        - name: param1
          in: cookie
          required: true
          schema:
            type: string
          description: 单行注释
        - name: param2
          in: cookie
          required: true
          schema:
            type: 'null'
        - name: queryParam1
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam1'
        - name: queryParam2
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam2'
        - name: activityBases
          in: query
          required: true
          schema:
            type: array
            items: *ref_1
          description: activityBases
        - name: param1
          in: path
          required: true
          schema:
            type: string
        - name: param2
          in: path
          required: true
          schema:
            type: number
  /root/v1/getParam:
    get:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      parameters:
        - name: orgcode1
          in: header
          required: true
          schema:
            type: string
        - name: orgcode2
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/IParam3'
        - name: cookie1
          in: cookie
          required: true
          schema:
            type: string
        - name: param1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam1'
        - name: param2
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam2'
        - name: param3
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam3'
        - name: param4
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam4'
        - name: param5
          in: path
          required: true
          schema:
            type: number
        - name: param6
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/getUserRequest'
  /root/v1/getQueryParamWithParam:
    get:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_2
      parameters:
        - name: queryParam1
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam1'
        - name: queryParam2
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam2'
        - name: param1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam1'
        - name: param2
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam2'
        - name: param3
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam3'
        - name: param4
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IParam4'
        - name: param5
          in: path
          required: true
          schema:
            type: number
        - name: param6
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/getUserRequest'
  /root/v1/postBody1:
    post:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      parameters:
        - name: queryParam1
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IParam1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postBody1'
        required: true
  /root/v1/postBody2:
    post:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      requestBody:
        content:
          application/json:
            schema: &ref_3
              $ref: '#/components/schemas/IParam2'
        required: true
  /root/v1/postBody3:
    post:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      requestBody:
        content:
          application/json:
            schema: &ref_4
              $ref: '#/components/schemas/IParam3'
        required: true
  /root/v1/postBody4:
    post:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                anyOf:
                  - *ref_0
                  - *ref_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getQueryParams1Request'
        required: true
  /root/v1/postBody5:
    post:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                anyOf:
                  - *ref_0
                  - *ref_2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                inlineBody1:
                  type: string
                inlineBody2:
                  type: number
              required:
                - inlineBody1
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
              required:
                - fileName
        required: true
  /root/v1/postBodyParam:
    post:
      tags:
        - Test1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - *ref_0
                  - *ref_2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                BodyParam1:
                  $ref: '#/components/schemas/BodyParam1'
                BodyParam2: *ref_3
                BodyParam3: *ref_4
                BodyParam4:
                  $ref: '#/components/schemas/IParam4'
                BodyParam5:
                  type: number
                BodyParam6:
                  $ref: '#/components/schemas/getUserRequest'
              required:
                - BodyParam1
                - BodyParam2
                - BodyParam3
                - BodyParam4
                - BodyParam5
                - BodyParam6
        required: true
components:
  schemas:
    getQueryParams1Request:
      type: object
      properties:
        activityBases:
          description: activityBases
          type: array
          items: *ref_1
      required:
        - activityBases
    ActivityBase:
      allOf:
        - type: object
          properties:
            activityId:
              description: 活动id(对应原有字段chooseRoomActivityId)
              type: number
            activityName:
              description: 活动名称
              type: string
          required:
            - activityId
            - activityName
        - type: object
          properties:
            customerCount:
              description: 活动下的用户数量
              type: number
            roomCount:
              description: 活动下的房源数量
              type: number
            isException:
              description: 摇号同步数据-是否有异常
              type: boolean
          required:
            - customerCount
    commonResponse:
      type: object
      properties:
        a:
          type: string
      required:
        - a
    IParam1:
      type: object
      properties:
        param1:
          description: 多行注释
          minimum: 1
          maximum: 10
          type: number
      required:
        - param1
    IParam2:
      type: object
      properties:
        param1:
          description: 单行注释
          type: string
        param2:
          type: 'null'
      required:
        - param1
        - param2
    IParam3:
      type: object
      properties:
        param1:
          allOf:
            - type: object
              properties:
                a:
                  type: string
              required:
                - a
            - type: object
              properties:
                b:
                  type: boolean
                c:
                  type: object
                  properties:
                    a:
                      type: number
                  required:
                    - a
              required:
                - b
                - c
        param2_1:
          type:
            - string
            - number
        param2:
          anyOf:
            - $ref: '#/components/schemas/Partial<Pick<IUser,"id">>'
            - type:
                - string
                - number
        param3:
          enum:
            - '1'
            - '2'
            - '3'
          type: string
        param4:
          enum:
            - '1'
            - '2'
            - 3
            - true
        param5:
          anyOf:
            - type: object
              properties:
                param1:
                  description: 单行注释
                  type: string
                param2:
                  type: 'null'
              required:
                - param1
                - param2
            - enum:
                - '1'
                - '2'
                - 3
      required:
        - param1
        - param2
        - param2_1
        - param3
        - param4
        - param5
    Partial<Pick<IUser,"id">>:
      type: object
      properties:
        id:
          type: number
    IParam4:
      type: object
      properties:
        param1:
          description: param1 minLength 1
          minLength: 1
          type: string
        param2:
          anyOf:
            - $ref: '#/components/schemas/Required<ActivityBase>'
            - type: string
        param3:
          $ref: '#/components/schemas/Required<Pick<IUser,"name">>'
      required:
        - param1
        - param2
        - param3
    Required<ActivityBase>:
      type: object
      properties:
        activityId:
          description: 活动id(对应原有字段chooseRoomActivityId)
          type: number
        activityName:
          description: 活动名称
          type: string
        customerCount:
          description: 活动下的用户数量
          type: number
        roomCount:
          description: 活动下的房源数量
          type: number
        isException:
          description: 摇号同步数据-是否有异常
          type: boolean
      required:
        - activityId
        - activityName
        - customerCount
        - isException
        - roomCount
    Required<Pick<IUser,"name">>:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    Response1:
      type: object
      properties:
        activityBases2:
          allOf:
            - type: object
              properties:
                activityId:
                  description: 活动id(对应原有字段chooseRoomActivityId)
                  type: number
                activityName:
                  description: 活动名称
                  type: string
              required:
                - activityId
                - activityName
            - type: object
              properties:
                customerCount:
                  description: 活动下的用户数量
                  type: number
                roomCount:
                  description: 活动下的房源数量
                  type: number
                isException:
                  description: 摇号同步数据-是否有异常
                  type: boolean
              required:
                - customerCount
            - type: object
              properties:
                activityBases2Other:
                  type: object
                  properties:
                    a:
                      type: string
                  required:
                    - a
              required:
                - activityBases2Other
      required:
        - activityBases2
    getUserRequest:
      type: object
      properties:
        a:
          description: a any
        b:
          type: string
        c:
          type: object
          properties:
            d:
              type: string
        user:
          $ref: '#/components/schemas/userWithList'
      required:
        - a
        - b
        - c
        - user
    userWithList:
      type: object
      properties:
        list:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              pics:
                type: array
                items:
                  type: string
            required:
              - id
              - name
              - pics
      required:
        - list
    postBody1:
      type: object
      properties:
        postBody1param1:
          type: string
        tow:
          type: array
          items:
            $ref: '#/components/schemas/Partial<postBody11>'
      required:
        - postBody1param1
        - tow
    Partial<postBody11>:
      type: object
      properties:
        postBody1param11:
          type: string
    BodyParam1:
      type: object
      properties:
        BodyParam1:
          type: string
      required:
        - BodyParam1
