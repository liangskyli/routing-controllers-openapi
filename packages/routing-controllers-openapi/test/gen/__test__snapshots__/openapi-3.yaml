openapi: 3.1.0
info:
  title: '@liangskyli/routing-controllers-openapi'
  license:
    name: >-
      This file is auto generated by @liangskyli/routing-controllers-openapi, do
      not edit!
  version: 0.5.0
servers:
  - url: url
tags:
  - name: Test3
    description: Test3Controller 注释3
paths:
  /getQueryParams1-v3:
    get:
      tags:
        - Test3
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  a3:
                    type: string
                  b:
                    type: object
                    properties:
                      param1:
                        description: 多行注释
                        minimum: 1
                        maximum: 10
                        type: number
                    required:
                      - param1
                  c:
                    type: object
                    properties:
                      param2:
                        description: 多行注释
                        minimum: 1
                        maximum: 10
                        type: number
                    required:
                      - param2
                required:
                  - a3
                  - b
                  - c
      parameters:
        - name: activityBases
          in: query
          required: true
          schema:
            type: array
            items: &ref_0
              $ref: '#/components/schemas/ActivityBase'
          description: activityBases
  /getQueryParam-v3/{id}:
    get:
      tags:
        - Test3
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  a33:
                    type: string
                required:
                  - a33
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
        - name: queryParam1
          in: query
          required: true
          schema:
            type: number
        - name: queryParam2
          in: query
          required: true
          schema:
            anyOf:
              - type: string
              - type: number
        - name: queryParam3
          in: query
          schema:
            type: array
            items:
              type: number
            default:
              - 1
              - 2
        - name: queryParam4
          in: query
          required: true
          schema:
            type: array
            items:
              anyOf:
                - type: string
                - type: number
        - name: queryParam5
          in: query
          required: true
          schema:
            type: array
            items:
              anyOf:
                - type: number
                - type: boolean
        - name: queryParam6
          in: query
          required: true
          schema: {}
        - name: queryParam8
          in: query
          schema:
            $ref: '#/components/schemas/IParam2'
        - name: queryParam9
          in: query
          schema:
            type: object
            properties:
              a:
                type: string
              b:
                type: string
              c: {}
            required:
              - a
              - b
              - c
            default:
              a: a
              b: b
              c: c
        - name: queryParam10
          in: query
          schema:
            anyOf:
              - type:
                  - string
                  - number
                enum:
                  - '1'
                  - '2'
                  - 3
              - type: boolean
                enum:
                  - true
        - name: queryParam11
          in: query
          schema:
            anyOf:
              - type:
                  - string
                  - number
                enum:
                  - '1'
                  - '2'
                  - 3
              - type: boolean
        - name: queryParam12
          in: query
          schema:
            anyOf:
              - type:
                  - string
                  - number
                enum:
                  - '1'
                  - '2'
                  - 3
              - type: boolean
        - name: queryParam13
          in: query
          schema:
            type: boolean
        - name: queryParam14
          in: query
          schema:
            type: boolean
        - name: queryParam15
          in: query
          schema:
            type: array
            items:
              items:
                - $ref: '#/components/schemas/IParam2'
                - type: number
                - type: object
                  properties:
                    activityBases:
                      type: array
                      items: *ref_0
                      description: activityBases
                  required:
                    - activityBases
              type: array
              maxItems: 3
              minItems: 3
        - name: queryParam16
          in: query
          schema:
            type: string
            enum:
              - '1'
              - '2'
              - '3'
        - name: queryParam17
          in: query
          schema:
            type: number
            enum:
              - 1
              - 2
              - 3
        - name: queryParam18
          in: query
          schema:
            items: []
            type: array
            maxItems: 0
            minItems: 0
        - name: queryParam19
          in: query
          schema:
            type: object
            properties:
              a:
                type: object
              b:
                type: object
                properties: {}
            required:
              - a
              - b
        - name: queryParam20
          in: query
          schema:
            type: object
        - name: queryParam21
          in: query
          schema:
            type: object
        - name: queryParam22
          in: query
          schema:
            $ref: '#/components/schemas/recordTest'
        - name: queryParam23
          in: query
          schema:
            type: string
            format: date-time
        - name: queryParam24
          in: query
          schema:
            type: 'null'
        - name: queryParam25
          in: query
          schema:
            type: string
            default: queryParam25
        - name: queryParam26
          in: query
          schema:
            type: boolean
            default: true
        - name: queryParam27
          in: query
          schema:
            type: boolean
        - name: queryParam28
          in: query
          schema:
            type: array
            minItems: 0
            maxItems: 0
            items: []
            default: []
  /postBody1-v3:
    post:
      tags:
        - Test3
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body1:
                  $ref: '#/components/schemas/proto.LockRequest'
                body2:
                  $ref: '#/components/schemas/InterFaceSameAll'
                body3:
                  $ref: '#/components/schemas/InterfaceAndNamespaceSameAll'
              required:
                - body1
                - body2
                - body3
        required: true
  /postBody2-v3:
    post:
      tags:
        - Test3
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomizeExportByFilterRequest'
        required: true
components:
  schemas:
    ActivityBase:
      allOf:
        - type: object
          properties:
            activityId:
              description: 活动id(对应原有字段chooseRoomActivityId)
              type: number
            activityName:
              description: 活动名称
              type: string
          required:
            - activityId
            - activityName
        - type: object
          properties:
            customerCount:
              description: 活动下的用户数量
              type: number
            roomCount:
              description: 活动下的房源数量
              type: number
            isException:
              description: 摇号同步数据-是否有异常
              type: boolean
          required:
            - customerCount
    IParam2:
      type: object
      properties:
        param1:
          description: 单行注释
          type: string
        param2:
          type: 'null'
        param4: {}
        param5: {}
      required:
        - param1
        - param2
        - param4
        - param5
    recordTest:
      type: object
      properties:
        a:
          $ref: '#/components/schemas/Record<string,string>'
        b:
          $ref: '#/components/schemas/Record<any,any>'
        c:
          $ref: '#/components/schemas/Record<string,never>'
        d:
          type: string
          format: date-time
      required:
        - a
        - b
        - c
        - d
    Record<string,string>:
      type: object
    Record<any,any>:
      type: object
    Record<string,never>:
      type: object
    proto.LockRequest:
      type: object
      properties:
        roomId:
          description: 房间id
          type: number
      required:
        - roomId
    InterFaceSameAll:
      type: object
      properties:
        id:
          type: string
        id2:
          type: string
      required:
        - id
        - id2
    InterfaceAndNamespaceSameAll:
      type: object
      properties:
        name1:
          type: array
          items:
            $ref: '#/components/schemas/proto.InterfaceAndNamespaceSame.item'
      required:
        - name1
    proto.InterfaceAndNamespaceSame.item:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
    CustomizeExportByFilterRequest:
      type: object
      properties:
        a:
          $ref: '#/components/schemas/Omit<postBody1,"tow">'
      required:
        - a
    Omit<postBody1,"tow">:
      type: object
      properties:
        postBody1param1:
          type: string
      required:
        - postBody1param1
